#include <stdio.h>
#include <malloc.h>
struct node
{
    int data;
    struct node *next;
};
struct node* start=NULL;
struct node* create_ll(struct node*);
struct node* display(struct node*);
struct node* insert_beg(struct node*);
struct node* insert_end(struct node* );
struct node* delete_beg(struct node* );
struct node* delete_end(struct node* );
int main()
{
   int option;

do
{
printf("\n\n *****MAIN MENU *****");
printf("\n 1: Create a list");
printf("\n 2: Display the list");
printf("\n 3: Add a node at the beginning");
printf("\n 4: Add a node at the end");
printf("\n 5: Delete a node at beg ");
printf("\n 6: Delete a node at end ");
printf("\n 7: EXIT");
printf("\n\n Enter your option : ");
scanf("%d", &option);
switch(option)
{
case 1: start = create_ll(start);
printf("\n  CIRCULAR LINKED LIST CREATED");
break;
case 2: start = display(start);
break;
case 3: start = insert_beg(start);
break;
case 4: start = insert_end(start);
break;
case 5: start = delete_beg(start);
break;
case 6: start = delete_end(start);
break;
}
}while(option !=7);
getch();
}
struct node* create_ll(struct node* start)
{
 struct node *ptr,*newnode;
 int num;
 printf("Enter the data\n ");
 scanf("%d",&num);
 printf("Enter -1 to end\n");
 while (num!=-1)
 {
     newnode=(struct node*)malloc(sizeof(struct node));
     newnode->data=num;
     if (start==NULL)
     {
         newnode->next=newnode;
         start=newnode;
     }
     else
     {
         ptr=start;
         while(ptr->next!=start)
         {
             ptr=ptr->next;

         }
         ptr->next=newnode;
         newnode->next=start;

     }
     printf("\nEnter the data :");
     scanf("%d",&num);
 }
return start;
}
struct node* insert_beg(struct node* start)
{
 int val;
 struct node *ptr,*newnode;
 newnode=(struct node*)malloc(sizeof(struct node));
 printf("Enter the data for node\n");
 scanf("%d",&val);
 newnode->data=val;
 ptr=start;
 while(ptr->next!=start)
    {
        ptr=ptr->next;
    }
  ptr->next=newnode;
  newnode->next=start;
  start=newnode;
  return start;
}
struct node * insert_end(struct node* start )
{
 int val;
 struct node *ptr,*newnode;
 newnode=(struct node*)malloc(sizeof(struct node));
 printf("Enter the data for node\n");
 scanf("%d",&val);
 newnode->data=val;
 ptr=start;
 while(ptr->next!=start)
    {
        ptr=ptr->next;
    }
    ptr->next=newnode;
    newnode->next=start;
    return start;
}
struct node *display(struct node* start )
{
    struct node *ptr;
    ptr=start;
    while(ptr->next!=start)
    {
        printf(" %d",ptr->data);
        ptr=ptr->next;
    }
    printf(" %d",ptr->data);
    return start;
}
struct node* delete_beg(struct node* start )
{
  struct node *ptr;
  ptr=start;
  while(ptr->next!=start)
    {
        ptr=ptr->next;
    }
    ptr->next=start->next;
    free(start);
    start=ptr->next;
    return start;
}
struct node* delete_end(struct node* start )
{
    struct node *ptr,*preptr;
    ptr=start;
    while(ptr->next!=start)
    {
        preptr=ptr;
        ptr=ptr->next;
    }
    preptr->next=ptr->next;
    free(ptr);
    return start;
}
